% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Olink_normalization.R
\name{olink_normalization_v2}
\alias{olink_normalization_v2}
\title{Normalization of all proteins (by OlinkID).}
\usage{
olink_normalization_v2(
  df1,
  df2 = NULL,
  normalization_samples_df1,
  normalization_samples_df2 = NULL,
  df1_project_nr = "P1",
  df2_project_nr = "P2",
  reference_project = "P1",
  reference_medians = NULL
)
}
\arguments{
\item{df1}{First dataframe to be used in normalization (required).}

\item{df2}{Second dataframe to be used in normalization}

\item{normalization_samples_df1}{Samples to be used for adjustment factor calculation in df1 (required).}

\item{normalization_samples_df2}{Samples to be used for adjustment factor calculation in df2.}

\item{df1_project_nr}{Project name of first dataset.}

\item{df2_project_nr}{Project name of second dataset.}

\item{reference_project}{Project name of reference_project. Needs to be the same as either df1_project_nr or df2_project_nr. The project to which the second project is adjusted to.}

\item{reference_medians}{Dataframe which needs to contain columns "OlinkID", and "Reference_NPX". Used for reference median normalization.}
}
\value{
A tibble of NPX data in long format containing normalized NPX values, including adjustment factors.
}
\description{
Normalizes an NPX data frame to another data frame, or to reference medians. If the two data frames are normalized to one another, Olinks default is using the older data frame as reference.
The function handles three different types of normalization: \cr\cr
Subset normalization: One of the data frames is adjusted to the other using a sample subset.
Adjustment is made using the differences in median between the subsets from the two data frames.
Both overlapping_samples_df1 and overlapping_samples_df2 need to be input.
The samples do not need to be named the same. \cr\cr
Intensity normalization: A version of subset normalization where all samples (except control samples) from the data frames are input as overlapping_samples_df1 and overlapping_samples_df2, respectively. \cr\cr
Reference median normalization: Working only on one data frame. This is effectively subset normalization, but using difference of medians to pre-recorded median values.
df1, overlapping_samples_df1 and reference_medians need to be specified. Adjustment of df1 is made using the differences in median between the overlapping samples and the reference medians.
}
\examples{
\donttest{

library(dplyr)

npx_df1 <- npx_data1 \%>\% dplyr::mutate(Project = 'P1')
npx_df2 <- npx_data2 \%>\% dplyr::mutate(Project = 'P2')

#Intensity normalization:
olink_normalization(df1 = npx_df1,
                    df2 = npx_df2,
                    normalization_samples_df1 = npx_df1$SampleID,
                    normalization_samples_df2 = npx_df2$SampleID)

#Subset normalization:
# Find a suitable subset of samples from both projects, but exclude Olink controls
df1_sampleIDs <- (npx_df1 \%>\%
    dplyr::filter(!grepl("control", SampleID, ignore.case=TRUE)) \%>\%
    dplyr::select(SampleID) \%>\%
    dplyr::distinct())$SampleID
df2_sampleIDs <- (npx_df2 \%>\%
    dplyr::filter(!grepl("control", SampleID, ignore.case=TRUE)) \%>\%
    dplyr::select(SampleID) \%>\%
    dplyr::distinct())$SampleID
some_samples_df1 <- sample(df1_sampleIDs, 16)
some_samples_df2 <- sample(df2_sampleIDs, 16)
# Normalize
olink_normalization(df1 = npx_df1,
                    df2 = npx_df2,
                    normalization_samples_df1 = some_samples_df1,
                    normalization_samples_df2 = some_samples_df2)

#Reference median normalization:
# For the sake of this example, set the reference median to 1
ref_median_df <- npx_df1 \%>\%
    dplyr::select(OlinkID) \%>\%
    dplyr::distinct() \%>\%
    dplyr::mutate(Reference_NPX = 1)
# Normalize
olink_normalization(df1 = npx_df1,
                    normalization_samples_df1 = some_samples_df1,
                    reference_medians = ref_median_df)
}
}
\keyword{Normalization}
