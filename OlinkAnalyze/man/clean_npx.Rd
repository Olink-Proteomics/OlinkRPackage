% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_npx.R
\name{clean_npx}
\alias{clean_npx}
\title{Clean Olink NPX Data Frame}
\usage{
clean_npx(
  df,
  check_npx_log,
  out_df = "tibble",
  control_sample_types_regx = c("SAMPLE_CONTROL", "PLATE_CONTROL", "NEGATIVE_CONTROL"),
  control_assay_types_regx = c("ext_ctrl", "inc_ctrl", "amp_ctrl"),
  control_sample_id_regex = NULL
)
}
\arguments{
\item{df}{A \code{"tibble"} or \code{"arrow"} object loaded from \code{read_npx()}.}

\item{check_npx_log}{A list object generated by \code{\link[=check_npx]{check_npx()}}, containing
metadata used in cleaning decisions.}

\item{out_df}{Output format. \code{"tibble"} (default) returns a tibble; \code{"arrow"}
returns an Arrow Table.}

\item{control_sample_types_regx}{A character vector of regex patterns for
identifying control sample types in the \code{SampleType} column.}

\item{control_assay_types_regx}{A character vector of regex patterns for
identifying internal control assay types in the \code{AssayType} column.}

\item{control_sample_id_regex}{A character vector of regex patterns for
identifying control-like SampleIDs in the \code{SampleID} column.
Default is \code{NULL}.}
}
\value{
A cleaned NPX dataset in either tibble or Arrow Table format,
depending on \code{out_df}.
}
\description{
This function applies a series of cleaning steps to an NPX dataset based on
the results from \code{\link[=check_npx]{check_npx()}}. It removes samples/assays with errors,
control samples, internal control assays to prepare the dataset for
downstream analysis.

The cleaning pipeline performs the following steps:
\enumerate{
\item \strong{Remove invalid OlinkIDs}: Any assays flagged as having invalid OlinkIDs
are excluded.
\item \strong{Remove assays with all NA values}: Assays that have no quantifiable data
across all samples are removed.
\item \strong{Remove duplicate SampleIDs}: Samples with duplicate identifiers are
excluded to ensure unique observations.
\item \strong{Remove control sample types}: Samples identified as controls (e.g.,
\code{"SAMPLE_CONTROL"}, \code{"PLATE_CONTROL"}) are removed based on the
\code{SampleType} column.
\item \strong{Remove samples failing QC}: Samples that failed Olink internal quality
control are excluded.
\item \strong{Remove control-like SampleIDs}: Samples whose \code{SampleID} matches a
user-defined regular expression (e.g., containing "control") are excluded.
\item \strong{Remove internal control assays}: Assays used for internal controls
(e.g., \code{"ext_ctrl"}, \code{"inc_ctrl"}) are removed based on \code{AssayType}.
}
}
\examples{
\dontrun {
# Example 1. Run clean_npx() to check multiple errors
df <- dplyr::tibble(
  SampleID = c("A", "B", "C", "D", "E", "F", "F", "control_F"),
  OlinkID = c("OID123456",
              rep("OID12345", 3L),
              rep("OID11111", 4L)),
  NPX = c(1, NA, NA, NA, 5, 6, 7, 8),
  PlateID = rep("plate1", 8L),
  SampleType = c(
    rep("SAMPLE", 5L),
    "SAMPLE_CONTROL",
    "PLATE_CONTROL",
    "NEGATIVE_CONTROL"
  ),
  AssayType = c(
    rep("assay", 3L),
    rep("ext_ctrl", 5L)
  ),
  QC_Warning = c(
    rep("FAIL", 3L),
    rep("PASS", 5L)
  )
)

log <- OlinkAnalyze::check_npx(df)
outcome <- OlinkAnalyze:clean_npx(df,
                                  check_npx_log = log,
                                  control_sample_id_regex = c("control"))

# Example 2. Test default setting of clean_npx()
npx_df <- OlinkAnalyze::npx_data1
log <- OlinkAnalyze::check_npx(npx_df)
clean_df <- OlinkAnalyze::clean_npx(npx_df, log)

# re-check the clean_df
recheck_log <- OlinkAnalyze::check_npx(clean_df)
}
}
\author{
Kang Dong
}
