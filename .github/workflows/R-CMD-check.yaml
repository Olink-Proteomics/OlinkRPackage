# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on: [push, pull_request]

name: R-CMD-check

jobs:

  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # Required as the JSON input file needs to be read
      - uses: actions/checkout@v2      
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@main        
        with:
          inputFile: '.github/workflows/matrix_config_check.json' 
          filter: '[?runOn==`${{ github.event_name }}` || runOn==`always`]'
          # addInclude: true
  
      
  R-CMD-check:
    needs: matrix_prep
    strategy:      
      fail-fast: false    
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release'}
          - {os: ubuntu-20.04, r: 'devel'}
  
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120       

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true            

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.18'      
          
      - name: Set BioC version
        run: |
          install.packages("remotes")
          forenv <- paste("R_BIOC_VERSION=", as.character(remotes::bioc_version()), sep = "")
          write(forenv, file = Sys.getenv("GITHUB_ENV"), append = TRUE) # Store current value to ENV          
        shell: Rscript {0}
      

      - name: Install Matrix from source 
        run: |
          install.packages("Matrix", type="source", repos='http://cran.us.r-project.org')
        shell: Rscript {0}
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: OlinkAnalyze
          extra-packages: any::rcmdcheck, pillar
          

      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: OlinkAnalyze     


  R-CMD-check-renv:
    needs: matrix_prep
    strategy:      
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-22.04,   r: '4.1.3'}
      

    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120       

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      
      - name: Install package
        run: |
          sudo apt update
          sudo apt-get -y install libglpk-dev texlive-latex-base \
             texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true            

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.18'

      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
          
      - name: Install and activate renv
        run: |
          install.packages("remotes")
          remotes::install_version("renv", "0.16.0")
          renv::activate(profile = "r413")
        shell: Rscript {0}

      - name: Get R and OS version
        id: get-version
        run: |
          cat("os-version=", sessionInfo()$running, "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
          cat("r-version=", R.Version()$version.string, "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
        shell: Rscript {0}

      - name: Restore Renv package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - name: Install renv dependencies
        run: renv::restore()
        shell: Rscript {0}

      - name: Check package
        run: |                             
          check_results <- rcmdcheck::rcmdcheck(error_on = "error",
                                                path = "OlinkAnalyze", 
                                                check_dir = "check")
        shell: Rscript {0}
 
      - name: Upload check results
        if: failure() 
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: "check"
          
  R-CMD-check-mac:
    needs: matrix_prep
    strategy:      
      fail-fast: false    
      matrix: 
        config:
          - {os: macOS-latest,   r: 'release'}
  
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120       

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true            

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.18'      
          
      - name: Set BioC version
        run: |
          install.packages("remotes")
          forenv <- paste("R_BIOC_VERSION=", as.character(remotes::bioc_version()), sep = "")
          write(forenv, file = Sys.getenv("GITHUB_ENV"), append = TRUE) # Store current value to ENV          
        shell: Rscript {0}
      

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: OlinkAnalyze
          extra-packages: any::rcmdcheck, pillar
          
      - name: Install Matrix from source 
        run: |
          install.packages("Matrix", type="source", repos='http://cran.us.r-project.org')
        shell: Rscript {0}
        
      - name: Install arrow from runiverse 
        run: |
          install.packages('arrow', repos = c('https://apache.r-universe.dev', 'https://cloud.r-project.org'))
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: OlinkAnalyze   
  
  R-CMD-check-4v2:
    needs: matrix_prep
    strategy:      
      fail-fast: false    
      matrix:
        config:
          - {os: ubuntu-20.04, r: '4.2.0'}
  
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120       

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true            

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.18'      
          
      - name: Set BioC version
        run: |
          install.packages("remotes")
          forenv <- paste("R_BIOC_VERSION=", as.character(remotes::bioc_version()), sep = "")
          write(forenv, file = Sys.getenv("GITHUB_ENV"), append = TRUE) # Store current value to ENV          
        shell: Rscript {0}

      - name: Install Matrix from source 
        run: |
          install.packages("https://cran.r-project.org/src/contrib/Archive/Matrix/Matrix_1.6-2.tar.gz", type = "source", repos = NULL)
        shell: Rscript {0}
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: OlinkAnalyze
          extra-packages: any::rcmdcheck, pillar, Matrix=?ignore-before-r=4.4.0
          

      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: OlinkAnalyze     
