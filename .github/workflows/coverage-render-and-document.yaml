# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches-ignore:
      - 'main'

name: coverage-render-and-document

jobs:
  coverage-render-and-document:
    name: coverage-render-and-document
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GITHUB_PAT: ${{ secrets.OA_PAT }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.OA_PAT }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pak, any::remotes, any::stringr, any::covr, any::devtools, any::rmarkdown, any::roxygen2, local::.
          working-directory: OlinkAnalyze

      - name: Test coverage badge
        run: |
          Rscript -e 'source("test_coverage/update_readme_coverage_badge.R")'

      - name: Commit changes if README is updated
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -am 'Update coverage badge in README' || echo "No changes to commit"

      - name: Render Rmarkdown files
        run: |
          RMD_PATH=($(find . -iname "*.rmd" | grep -v vignette || echo "No Rmd found"))
          Rscript -e 'for (f in commandArgs(TRUE)) if (file.exists(f)) rmarkdown::render(f)' ${RMD_PATH[*]}

      - name: Commit results
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -am 'Re-build Rmarkdown files' || echo "No changes to commit"

      - name: Document
        run: |
          # capture output of roxygen2::roxygenise on OlinkAnalyze
          doc_output <- tryCatch(
            {
              capture.output(roxygen2::roxygenise(package.dir = "OlinkAnalyze"), type = "message")
            },
            error = function(e) {
              message("Error: ", e$message)
              quit(status = 1)
            }
          )

          # Check for "✖" symbol in the output, which indicates an issue
          if (any(grepl("✖", doc_output))) {
            message("Roxygen2 found documentation issues:\n",
                    paste(doc_output[grepl("✖", doc_output)], collapse = "\n"))
            quit(status = 1)
          }
        shell: Rscript {0}

      - name: Commit results
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add OlinkAnalyze/man/\* OlinkAnalyze/NAMESPACE
          git commit -am 'Document' || echo "No changes to commit"

      - name: Pull first
        run: |
          git pull

      - name: Push
        run: |
          git push origin
