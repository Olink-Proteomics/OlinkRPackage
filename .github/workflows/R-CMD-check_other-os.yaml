# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
#
# NOTE: This workflow checks if OA runs without issues on macOS and Windows.
#
on:
  pull_request:
    branches:
      - 'main'
      - 'develop'
      - 'optimization_develop'
      - 'optimization_main'

name: R-CMD-check_other-os

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 120
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release'}
          - {os: ubuntu-24.04, r: 'release'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      -
        uses: actions/checkout@v4
      -
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true
      -
        uses: r-lib/actions/setup-pandoc@v2
      -
        name: Set BioC version
        run: |
          install.packages("remotes")
          forenv <- paste("R_BIOC_VERSION=", as.character(remotes::bioc_version()), sep = "")
          write(forenv, file = Sys.getenv("GITHUB_ENV"), append = TRUE) # Store current value to ENV
        shell: Rscript {0}
      -
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: OlinkAnalyze
          extra-packages: any::rcmdcheck
      -
        name: Install arrow from r-universe
        if: matrix.config.os == 'macos-latest'
        run: |
          install.packages('arrow', repos = c('https://apache.r-universe.dev'))
        shell: Rscript {0}
      -
        uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: OlinkAnalyze
